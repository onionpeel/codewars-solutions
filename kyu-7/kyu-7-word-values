// Given a string "abc" and assuming that each letter in the string has a value equal to its position in the alphabet, our string will have a value of 1 + 2 + 3 = 6. This means that: a = 1, b = 2, c = 3 ....z = 26.
//
// You will be given a list of strings and your task will be to return the values of the strings as explained above multiplied by the position of that string in the list. For our purpose, position begins with 1.
//
// nameValue ["abc","abc abc"] should return [6,24] because of [ 6 * 1, 12 * 2 ]. Note how spaces are ignored.

function wordValue(array) {
  var alphabetString = String.fromCharCode(...[...Array(26)].map(_ => i++, i = 97));
  var alphabetObject = {};

  var letter;
  for (var i = 0; i < alphabetString.length; i++) {
    letter = alphabetString.charAt(i);
    alphabetObject[letter] = i + 1;
  };

  var newArray =[];
  for (var i = 0; i < array.length; i++) {
    var string = array[i];
    var regex = /\s/g;
    var newString = string.replace(regex, "");

    var result = 0;
    for (var j = 0; j < newString.length; j++) {
      var letter = newString.charAt(j);
      var valueOfLetter = alphabetObject[letter];
      result = result + valueOfLetter;
    };
    result = result * (i + 1);
    newArray.push(result);
  };
  return newArray;
};
